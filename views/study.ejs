<%- include('partials/topnav_signedin') %>
<%- include('partials/styles/studyStyles') %>
<!---
    display current week only--starting with the current day
    6am - 2am for each day, drag and drop events to add them
-->
<% 
function dateToString(date) {
        return date.getMonth()+'/'+date.getDate()+'/'+date.getFullYear()+':';
    }
 %> 
<% var dayNames = ["SUN", "MON", "TUE", "WED", "THU", "FRI", "SAT"] %>
<% var times = ["6 AM", "7 AM", "8 AM", "9 AM", "10 AM", "11 AM", "12 PM", "1 PM", "2 PM", "3 PM", "4 PM", "5 PM", "6 PM", "7 PM", "8 PM", "9 PM", "10 PM", "11 PM"]; %>
<div class="row" style="height:100%;">
    <div class="col-md-9" style="text-align:center; color:#15335e;">
        <h4 style="margin-top:10px;">Desired Study Sessions</h4>
        <div style="padding:30px;">
            <table id="calendarTable">
                <tr>
                    <td></td>
                    <% daysArray.forEach((day) => { %>
                        <td class="dateLabel"><%= dayNames[day.getDay()] %> <%= day.getMonth()+1 %>/<%= day.getDate() %></td>
                    <% }); %>
                </tr>
                <tr>
                    <td id="topOfCalendar" class="timeLabel" style="padding-top:0px;">5 AM</td>
                    <td class="firstCell"></td>
                    <td class="firstCell"></td>
                    <td class="firstCell"></td>
                    <td class="firstCell"></td>
                    <td class="firstCell"></td>
                    <td class="firstCell"></td>
                    <td class="firstCell"></td>
                </tr>
                <% times.forEach((time) => { %>
                    <tr>
                        <td class="timeLabel"><%= time %></td>
                        <td class="calendarCell" onClick="makeSession(this)" id="<%= dateToString(daysArray[0]) + time %>"></td>
                        <td class="calendarCell" onClick="makeSession(this)" id="<%= dateToString(daysArray[1]) + time %>" ></td>
                        <td class="calendarCell" onClick="makeSession(this)" id="<%= dateToString(daysArray[2]) + time %>" ></td>
                        <td class="calendarCell" onClick="makeSession(this)" id="<%= dateToString(daysArray[3]) + time %>" ></td>
                        <td class="calendarCell" onClick="makeSession(this)" id="<%= dateToString(daysArray[4]) + time %>" ></td>
                        <td class="calendarCell" onClick="makeSession(this)" id="<%= dateToString(daysArray[5]) + time %>" ></td>
                        <td class="calendarCell" onClick="makeSession(this)" id="<%= dateToString(daysArray[6]) + time %>" ></td>
                    </tr>
                <% }); %>
            </table>
        </div>
    </div>

    <div class="col-md-3 no-float" style="border-left: 5px solid #eaeaea; color:#15335e; text-align:center;">
        <h4 style="margin-top:10px;">My Events</h4>
    </div>
</div>


<div class="popUp" id="popUpEventCreator">
    <!---
        fields:
            start time: default is in id,
            end time: 1 hour later,
            date: cannot change
        cancel                      submit
    -->
    <h5 id="PUtitle"></h5>
    <hr>
    <form method="post" action="/routes/addStudyTime">
        <div class="form-group row">
            <label for="startTime" class="col-5 col-form-label">Start Time</label>
            <div class="col-7">
                <input class="form-control" name="startTime" type="time" id="startTime">
            </div>
        </div>
        <div class="form-group row">
            <label for="endTime" class="col-5 col-form-label">End Time</label>
            <div class="col-7">
                <input class="form-control" name="endTime" type="time" id="endTime">
            </div>
        </div>
        <input type="hidden" name="email" value="<%= user %>">
        <input type="hidden" id="PUdate" name="date">
        <button type="submit" class="btn modalButton" style="background: #15335e; color: white;">Submit</button>
        <button onclick="closePU('popUpEventCreator')" type="button" class="btn float-right modalButton" style="background: red; color: white;">Cancel</button>
    </form>
</div>


<div class="popUp" style="width: 400px;" id="popUpEventEditor">
    <div class="row" style="margin-bottom: 10px;">
        <div class="col-10"><h5 id="editTitle"></h5></div>
        <div class="col-2" style="font-size:20px; padding-top:3px;">
            <a id="deleteRoute" href=''><i class="fa fa-trash-o modalButton" style="color:#a4a4a4;" aria-hidden="true"></i></a>
        </div>
    </div>
    <form method="post" action="/routes/editStudyTime">
        <div class="form-group row">
            <label for="startTime" class="col-5 col-form-label">Start Time</label>
            <div class="col-7">
                <input class="form-control" name="startTime" type="time" id="edit_startTime">
            </div>
        </div>
        <div class="form-group row">
            <label for="endTime" class="col-5 col-form-label">End Time</label>
            <div class="col-7">
                <input class="form-control" name="endTime" type="time" id="edit_endTime">
            </div>
        </div>
        <input type="hidden" name="email" value="<%= user %>">
        <input type="hidden" id="edit_date" name="date">
        <input type="hidden" id="edit_id" name="id">
        <button type="submit" class="btn modalButton" style="background: #15335e; color: white;">Edit</button>
        <button onClick="closePU('popUpEventEditor')" type="button" class="btn float-right" id="closeEdit">Close</button>
    </form>
</div>

<script>
    //create session pop up onclick function
    function makeSession(cell) {
        var cellArr = cell.id.split(':');
        var dateArr = cellArr[0].split('/');
        var monthStr = parseInt(dateArr[0]) + 1;
        var am_or_pm = cellArr[1].slice(cellArr[1].length-2, cellArr[1].length);
        var hour = cellArr[1].split(' ')[0];
        if (am_or_pm == "AM") {var endTime = hourFormat(hour) + ":00:00"; var startTime = hourFormat(parseInt(hour)-1) + ":00:00";}
        else {
            if (cellArr[1].slice(0,2) == "12") {var endTime = "12:00:00"; var startTime = "11:00:00";}
            else {var endTime = (hourFormat(parseInt(hour)+12)) + ":00:00"; var startTime = hourFormat(parseInt(hour)+11) + ":00:00";}
        }
        document.getElementById("startTime").value = startTime;
        document.getElementById("endTime").value = endTime;
        document.getElementById("PUtitle").innerHTML = "Create Study Session on " + monthStr + "/" + dateArr[1];
        document.getElementById("popUpEventCreator").style.display = "block";
        document.getElementById("PUdate").value = cellArr[0];
    };
    //closes pop up with id
    function closePU(id) {
        document.getElementById(id).style.display = "none";
    }

    //removes leading zero from an hour
    function hourFormat(hour) {
        hour = hour.toString();
        if (hour.length == 1) {
            return "0" + hour.toString();
        }
        else {
            return hour.toString();
        }
    }
    
    //onclick of editSession popup
    function editSession(sessionEL) {
        document.getElementById("popUpEventEditor").style.display = "block";
        sessionID = sessionEL.id;
        var session;
        sessions.forEach((sesh) => {
            if (sesh._id == sessionID) {
                session = sesh;
            }
        });
        var month = parseInt(session.date.split('/')[0])+1;
        var day = parseInt(session.date.split('/')[1]);
        console.log(session);
        document.getElementById("editTitle").innerHTML = 'Edit Study Session on ' + month + '/' + day;
        document.getElementById("edit_startTime").value = session.startTime;
        document.getElementById("edit_endTime").value = session.endTime;
        document.getElementById("edit_date").value = session.date;
        document.getElementById("edit_id").value = session._id;
        document.getElementById("deleteRoute").href = `/routes/deleteSession?id=${session._id}&email=${session.email}`
    };


    //makeing calendar session boxes --------------------------------------------------------------
    //calendar constants
    var positioning = document.getElementById('topOfCalendar').getBoundingClientRect();
    var topCal = positioning.bottom;
    var columnLeft = positioning.left;
    var columnWidth = positioning.width+1;
    var cellHeight = 24;
    var heightOfCal = cellHeight*18;

    //session data
    var sessions = <%- JSON.stringify(sessionsArr) %>;
    sessions.forEach((session) => {
        document.body.innerHTML += `<div onClick="editSession(this)" class="calSession" id="${session._id}"></div>`
        var sessionEL = document.getElementById(session._id);
        sessionEL.style.width = columnWidth;
        sessionEL.style.top = getTop(session.startTime);
        sessionEL.style.height = getHeight(session.startTime, session.endTime);
        sessionEL.style.left = getLeft(session.date);
    });
    
    //session positioning helpers
    //takes in session.startTime and returns the appropriate style.top for the session element
    function getTop(startTime) {
        var startHour = parseInt(startTime.split(':')[0]);
        var startMins = parseInt(startTime.split(':')[1]);
        var startTotalMins = startHour*60 + startMins;
        var startMinsSince5 = startTotalMins - 5*60;
        var startY = (startMinsSince5/60) * cellHeight;
        return (topCal + startY).toString() + 'px'
    }

    //takes in session.startTime, session.endTime and returns the appropriate style.height for the session element
    function getHeight(startTime, endTime) {
        var startHour = parseInt(startTime.split(':')[0]);
        var startMins = parseInt(startTime.split(':')[1]);
        var endHour = parseInt(endTime.split(':')[0]);
        var endMins = parseInt(endTime.split(':')[1]);
        var sessionLength = (endHour*60 + endMins) - (startHour*60 + startMins);
        return (sessionLength/60 * cellHeight).toString() + 'px';
    }

    //takes in session.date and returns the appropriate style.left for the session element
    function getLeft(date) {
        var colPositioning = document.querySelector(`[id^="${date}"]`).getBoundingClientRect();
        return (colPositioning.left).toString() + 'px';
    }

</script>



